node{
 stage('1.CodeClone'){
    sh  "git 'https://github.com/SERAHAKI/maven-web-application"
    //bat "git clone https://github.com/SERAHAKI/maven-web-application"
  }
node{
 stage('1.CodeClone'){
git credentialsId: 'gitHubCredentials', url: ''https://github.com/SERAHAKI/maven-web-application'
   }
 stage('2MavenBuild'){
 }
 node{
  def mavenHome = tool name: 'maven3.9.1'
 stage('1.CodeClone'){
    git credentialsId: 'gitHubCredentials', url: 'https://github.com/SERAHAKI/maven-web-application'
   }
 stage('2MavenBuild'){
   sh "${mavenHome}/bin/mvn package"
 }
 stage('3codeQuality'){
   sh "${mavenHome}/bin/mvn sonar:sonar"
 }
 stage('4UploadArtifacts'){
   sh "${mavenHome}/bin/mvn deploy"
 }
 stage('5deploy2UAT'){
deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://35.87.43.184:8177/')], contextPath: null, war: 'target/*war'
}
  stage('6Manualapproval'){
    sh "echo 'ready for review' "
    timeout(time:5, unit:'HOURS') {
    input message: 'Application is ready for deployment, Please review and approve'
 }
  stage('7deploy2Prod'){
   deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://35.87.43.184:8177/')], contextPath: null, war: 'target/*war'
 }
     stage('8emailNotify'){
emailext body: '''Hello Team, 

Build is successfully deployed

PAWPAW''', recipientProviders: [developers(), contributor()], subject: 'Build status', to: 'henrynkongho8@gmail.com'
     }
  }
 }
